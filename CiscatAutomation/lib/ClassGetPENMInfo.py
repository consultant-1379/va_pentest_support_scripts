import json
import logging
import os
import sys

from paramiko import SSHClient
from paramiko import AutoAddPolicy
from paramiko.ssh_exception import AuthenticationException
from scp import SCPClient

class PENMInfo:
    def __init__(self):
        self.remoteSEDFile = '/software/autoDeploy/MASTER_siteEngineering.txt'
        self.remoteKeyFile = '/software/autoDeploy/vm_private_key'
        logging.basicConfig(
            filename=os.path.join(os.path.expanduser('~'), 'scriptCiscat', 'scanconf.log'),
            level=logging.INFO,
            format='%(asctime)s.%(msecs)03d %(levelname)s %(module)s - [%(funcName)s]: %(message)s',
            datefmt='%Y-%m-%d %H:%M:%S',
        )

    def retrieve_files(self, lmihost, lmiusername, lmipassword, instance):
        self.localsedfile = os.path.join(os.path.expanduser('~'), 'scriptCiscat', 'resources', 'pENM', instance,
                                    'MASTER_siteEngineering.txt')
        self.localkeyfile = os.path.join(os.path.expanduser('~'), 'scriptCiscat', 'resources', 'pENM', instance,
                                    'vm_private_key')
        try:
            logging.info('Getting SED file from LMI ' + lmihost)
            print('Getting SED file from LMI ' + lmihost)
            ssh = SSHClient()
            ssh.set_missing_host_key_policy(AutoAddPolicy())
            ssh.connect(hostname=lmihost, username=lmiusername, password=lmipassword)
            scp = SCPClient(ssh.get_transport())
            scp.get(self.remoteSEDFile, self.localsedfile)
            scp.get(self.remoteKeyFile, self.localkeyfile)
            os.chmod(f'{self.localkeyfile}', 0o600)
            ssh.close()
            scp.close()
            f = os.path.join(os.path.expanduser('~'), 'scriptCiscat', 'resources', 'pENM', instance,'Credential.json')
            return 'Files correctly transferred'
        except AuthenticationException:
            logging.error("Error authenticating  to LMI host " + lmihost + " verify the credentials")
            print("Error authenticating  to LMI host " + lmihost + " verify the credentials")
            raise Exception('Error authenticating  to LMI host ' + lmihost + ' verify the credentials')
        except Exception as err:
            logging.error(f'Error retrieving MASTER_siteEngineering or vm_private_key file from LMI host {lmihost} : {err}')
            print(f"Error retrieving MASTER_siteEngineering or vm_private_key  file from LMI host {lmihost} : {err}")
            raise Exception('Error retrieving MASTER_siteEngineering or vm_private_key  file from LMI host under /software/autoDeploy/ folder')


if __name__ == '__main__':
    fr = PENMInfo()
    lista = fr.retrieve_files('131.160.164.14', 'root', '12shroot', '426')

