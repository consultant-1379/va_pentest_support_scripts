import json
import os
import requests
import re
import sys


class VENMInfo:
    url_for_sed = 'https://atvdit.athtem.eei.ericsson.se/api/documents/SED_ID'
    url_for_deployments_list = 'https://atvdit.athtem.eei.ericsson.se/api/deployments'

    def getPemFile(self, deployment_name, dest_folder):
        parts = dest_folder.strip(os.sep).split(os.sep)
        instance = parts.pop()
        target = parts.pop()
        print(f'target {target} instance {instance}')
        url = f'https://atvdit.athtem.eei.ericsson.se/api/deployments?q=name={deployment_name}&fields=enm(private_key)'
        res = requests.get(url)
        match = re.search('-----BEGIN.+KEY-----', res.text)
        pem = match.group(0)
        pem = re.sub(r'(\\r)?\\n', '\n', pem)
        file = open(f'{dest_folder}/vm_private_key', 'w')
        file.write(pem)
        file.close()
        os.chmod(f'{dest_folder}/vm_private_key', 0o600)

    def getDeploymentsList(self):
        return requests.get(VENMInfo.url_for_deployments_list).json()

    def getDeploymentsSed(self, sed_id):
        machines = None
        url = VENMInfo.url_for_sed.replace('SED_ID', sed_id)
        resp = requests.get(VENMInfo.url_for_sed.replace('SED_ID', sed_id)).json()
        ips = dict(resp['content']['parameters'])
        tmp_dict = {}
        tmp_cred = {}
        for k, v in ips.items():
            if re.match('\d+\.\d+\.\d+\.\d+', v):
                tmp_dict[k] = v
            if re.match('.+(ssw|user)', k.lower()):
                tmp_cred[k] = v
        return tmp_dict, tmp_cred

    def getInfo(self, target, instance):
        full_name = None
        dest_folder = os.path.join(os.path.expanduser('~'), 'scriptCiscat', 'resources', target, instance)
        deployments = self.getDeploymentsList()

        for dep in deployments:
            if instance in dep['name']:
                full_name = dep['name']
                sed_id = dep['enm']['sed_id']
                found = False
                for doc in dep['documents']:
                    if doc['schema_name'] == 'vnflcm_sed_schema':
                        document_id = doc['document_id']
                        print(f"2nd sed file found {dep['documents'][0]['schema_name']}")
                        found = True
                if not found:
                    print('Error : Not able to find the 2nd sed file')
                    sys.exit(0)
                break
        if full_name:
            print('Fullname = ' + full_name)
            with (open(f'{dest_folder}/MASTER_siteEngineering.txt', 'w') as sed, open(f'{dest_folder}/sedCred.json',
                                                                                      'w') as sedcred):
                tmp, cred = self.getDeploymentsSed(sed_id)
                tmpsed2, cred2 = self.getDeploymentsSed(document_id)

                for k, v in cred.items():
                    sedcred.write(f'"{k}": "{v}",\n')
                for k, v in cred2.items():
                    sedcred.write(f'"{k}": "{v}",\n')

                for k, v in tmp.items():
                    sed.write(f'"{k}": "{v}",\n')
                for k, v in tmpsed2.items():
                    sed.write(f'"{k}": "{v}",\n')
                    if 'external_ipv4_for_services_vm' == k:
                        print(f'{k} : {v}')
                        extgateway = f'Gateway : {v}'
            self.getPemFile(full_name, dest_folder)
        else:
            return f'Deployment {instance} not found.'
        return 'Files correctly transferred'


if __name__ == '__main__':
    deployment_info = VENMInfo('vENM', 'c7b11')
    deployment_info.getInfo()
