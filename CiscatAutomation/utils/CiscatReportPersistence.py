import pandas as pd
import sqlite3


def insert_data(db_path, excel_file):

    # Read the Excel file
    df1 = pd.read_excel(excel_file, sheet_name='Results')
    df2 = pd.read_excel(excel_file, sheet_name='Info')
    # Create a connection to the SQLite database
    conn = sqlite3.connect(db_path)
    # Enable foreign key usage
    conn.execute("PRAGMA foreign_keys = ON")
    # Write the data to a SQLite table
    df2.to_sql('execution_info', conn, if_exists='append', index=False)
    # Get the last inserted id in execution_info
    cursor = conn.execute('SELECT last_insert_rowid()')
    last_id = cursor.fetchone()[0]
    # Fill all values of execution_id in df1 with last_id
    df1['execution_id'] = last_id
    df1.to_sql('full_report', conn, if_exists='append', index=False)
    # Close the connection
    conn.close()

def check_for_execution(db_path, isoversion):

    # Create a connection to the SQLite database
    conn = sqlite3.connect(db_path)
    # Create a cursor
    cur = conn.cursor()
    # Execute the query
    cur.execute(f"SELECT * FROM execution_info WHERE \"ENM ISO version\" = '{isoversion}'")
    # Fetch all the results
    rows = cur.fetchall()
    # Close the connection
    conn.close()
    # Now `rows` contains the result of the query
    return len(rows) > 0

def get_first_value_from_excel(file_path):
    # Load spreadsheet
    xl = pd.ExcelFile(file_path)

    # Load a sheet into a DataFrame by its name
    df = xl.parse('Info')

    # Get the first value of the column 'ENM ISO version'
    first_value = df['ENM ISO version'].iloc[0]

    return first_value

def persist(excel_path, db_path):
    try:
        iso_version = get_first_value_from_excel(excel_path).strip()
        print(f'ISO Version = /{iso_version}/')
        check = check_for_execution(db_path, iso_version)
        print(f'Is already present {iso_version} : {check}')
        if not check:
            insert_data(db_path, excel_path)
    except Exception as err:
        raise Exception(f'Error inserting data in db \n{err}\n')


if __name__ == '__main__':

    persist('..\\a.xlsx', '..\\db\\ciscat_report.db')

